// MongoDB Playground
// To disable this template go to Settings | MongoDB | Use Default Template For Playground.
// Make sure you are connected to enable completions and to be able to run a playground.
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

// Select the database to use.
use('Firedata');

// The drop() command destroys all data from a collection.
// Make sure you run it against the correct database and collection.
// db.entrylogs.drop();

// Insert a few documents into the sales collection.
db.entrylogs.insertMany([
  {'_id':'azsxdcf', 'log':'1st log', 'desc':'1st desc', 'comments':'some1 comments'},
  // {'_id':'awsedrft', 'log':'2nd log', 'desc':'2nd desc', 'comments':'some2 comments'},
  // {'_id':'asddsf', 'log':'3rd log', 'desc':'3rd desc', 'comments':'some3 comments'},
 ]);

// Run a find command to view items sold on April 4th, 2014.
// db.sales.find({ date: { $gte: new Date('2014-04-04'), $lt: new Date('2014-04-05') } });

// // Build an aggregation to view total sales for each product in 2014.
// const aggregation = [
//   { $match: { date: { $gte: new Date('2014-01-01'), $lt: new Date('2015-01-01') } } },
//   { $group: { _id: '$item', totalSaleAmount: { $sum: { $multiply: [ '$price', '$quantity' ] } } } }
// ];

// // Run the aggregation and open a cursor to the results.
// // Use toArray() to exhaust the cursor to return the whole result set.
// // You can use hasNext()/next() to iterate through the cursor page by page.
// db.sales.aggregate(aggregation);
